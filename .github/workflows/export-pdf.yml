name: Export Rendered PDFs

on:
  workflow_dispatch:
  push:
    paths:
      - 'routes.json'
      - '.github/workflows/export-pdf.yml'

env:
  APP_PORT: 3000

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Detect framework
        id: detect
        run: |
          if jq -er '.scripts.start' package.json >/dev/null 2>&1; then echo "has_start=true" >> $GITHUB_OUTPUT; fi
          if jq -er '.scripts.build' package.json >/dev/null 2>&1; then echo "has_build=true" >> $GITHUB_OUTPUT; fi
          if jq -er '.dependencies.next' package.json >/dev/null 2>&1; then echo "is_next=true" >> $GITHUB_OUTPUT; fi
          if jq -er '.devDependencies.vite // .dependencies.vite' package.json >/dev/null 2>&1; then echo "is_vite=true" >> $GITHUB_OUTPUT; fi
          if jq -er '.dependencies.react-scripts' package.json >/dev/null 2>&1; then echo "is_cra=true" >> $GITHUB_OUTPUT; fi

      - name: Build app (if available)
        if: steps.detect.outputs.has_build == 'true'
        run: npm run build

      - name: Start app
        run: |
          set -e
          PORT=${APP_PORT}
          if [ "${{ steps.detect.outputs.is_next }}" = "true" ]; then
            # Next.js: prefer production start
            (PORT=$PORT npm run start || PORT=$PORT npm run dev) &
          elif [ "${{ steps.detect.outputs.is_vite }}" = "true" ]; then
            # Vite: serve built files or start preview
            if [ -d dist ]; then
              npx serve -s dist -l $PORT &
            else
              (PORT=$PORT npm run preview -- --host 127.0.0.1 --port $PORT || PORT=$PORT npm run dev -- --host 127.0.0.1 --port $PORT) &
            fi
          elif [ "${{ steps.detect.outputs.is_cra }}" = "true" ]; then
            # CRA: serve the build folder if available; else dev
            if [ -d build ]; then
              npx serve -s build -l $PORT &
            else
              (PORT=$PORT npm start) &
            fi
          else
            # Fallback: try start, then dev, or serve common folders
            (PORT=$PORT npm run start || PORT=$PORT npm run dev || npx serve -s dist -l $PORT || npx serve -s build -l $PORT || npx serve -s out -l $PORT) &
          fi
          echo $! > app.pid

      - name: Wait for app to be reachable
        run: |
          for i in {1..90}; do
            if curl -fsS http://localhost:${APP_PORT} >/dev/null 2>&1; then
              echo "App is up"; exit 0
            fi
            sleep 2
          done
          echo "App did not start in time"
          exit 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Playwright (Python)
        run: |
          python -m pip install playwright
          python -m playwright install chromium

      - name: Export PDFs
        env:
          AUTH_COOKIE_NAME: ${{ secrets.AUTH_COOKIE_NAME }}
          AUTH_COOKIE_VALUE: ${{ secrets.AUTH_COOKIE_VALUE }}
          AUTH_BEARER_TOKEN: ${{ secrets.AUTH_BEARER_TOKEN }}
        run: |
          python render_with_playwright.py routes.json

      - name: Upload PDFs
        uses: actions/upload-artifact@v4
        with:
          name: rendered-pdfs
          path: pdf-exports/**
